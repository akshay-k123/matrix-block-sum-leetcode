class Solution {
public:
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
      vector<vector<int>>pre(mat.size(),vector<int>(mat[0].size(),0));
      
      for(int i=0;i<mat.size();i++)
      {
          for(int j=0;j<mat[0].size();j++)
          {
              if(j==0)pre[i][j]=mat[i][j];
              else
             pre[i][j]=pre[i][j-1]+mat[i][j];
          }
      }
       for(int i=1;i<mat.size();i++)
      {
          for(int j=0;j<mat[0].size();j++)
          {
             pre[i][j]=pre[i-1][j]+pre[i][j];
          }
      }
        
      for(int i=0;i<mat.size();i++)
      {
          for(int j=0;j<mat[0].size();j++)
          {
         int x=i-k;
         if(x<0)x=0;
         int y=j-k;
         if(y<0)y=0;
         int x1=i+k;
         if(x1>mat.size()-1)x1=mat.size()-1;
         int y1=j+k;
         if(y1>mat[0].size()-1)y1=mat[0].size()-1;
         if(x!=0 && y!=0)
         mat[i][j]=pre[x1][y1]-pre[x1][y-1]-pre[x-1][y1]+pre[x-1][y-1];
         else if(x==0 && y!=0)
         mat[i][j]=pre[x1][y1]-pre[x1][y-1];
         else if(x!=0 && y==0)
         mat[i][j]=pre[x1][y1]-pre[x-1][y1];
         else mat[i][j]=pre[x1][y1];

          }
          }return mat;

    }
};
